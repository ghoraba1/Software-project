<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <title>Admin Dashboard - Orders</title>
    <style>
        .equipment-list th, .equipment-list td {
            text-align: center;
            vertical-align: middle;
        }
        .equipment-list {
            margin-top: 20px;
        }
        #navbarId {
            margin-bottom: 20px;
        }
        .table-responsive {
            width: 90%;
            margin: auto;
        }
    </style>
</head>
<body>
    <!-- Navbar -->
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark" id="navbarId">
        <a class="navbar-brand" href="#">Superior Bros</a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarContent" aria-controls="navbarContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>

        <div class="collapse navbar-collapse" id="navbarContent">
            <ul class="navbar-nav mr-auto">
                <li class="nav-item">
                    <a class="nav-link" href="/UserMangement">User Management Page</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/Orders">Orders</a>
                </li>
                <li class="nav-item d-flex align-items-center">
                    <input type="text" class="form-control col-9 ml-2" id="search" placeholder="Search for equipment">
                    <button class="btn btn-primary ml-2" id="searchBtn">Search</button>
                </li>
            </ul>
            <button class="btn btn-danger my-2 my-sm-0" id="logoutBtn">Logout</button>
        </div>
    </nav>
    
    <!-- Orders Table -->
    <div class="table-responsive">
        <h1 class="text-center mb-4">Orders</h1>
        <li class="nav-item d-flex align-items-center">
    <label for="startDate" class="mr-2">From:</label>
    <input type="date" class="form-control mr-2" id="startDate">
    <label for="endDate" class="mr-2">To:</label>
    <input type="date" class="form-control mr-2" id="endDate">
    <button class="btn btn-secondary" id="filterDateBtn">Filter</button>
</li>

        <table class="table table-bordered equipment-list">
            <thead class="thead-dark">
                <tr>
                    <th>Order ID</th>
                    <th>Date</th>
                    <th>User</th>
                    <th>Details</th>
                </tr>
            </thead>
            <tbody>
                <!-- Order rows will be dynamically populated -->
            </tbody>
        </table>
    </div>

    <!-- Order Details Modal -->
    <div class="modal fade" id="orderDetailsModal" tabindex="-1" role="dialog" aria-labelledby="orderDetailsLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="orderDetailsLabel">Order Details</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p><strong>Order ID:</strong> <span id="modalOrderId"></span></p>
                    <p><strong>Order Date:</strong> <span id="modalOrderDate"></span></p>
                    <p><strong>Username:</strong> <span id="modalUsername"></span></p>
                    <h5>Equipment</h5>
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th>Equipment Name</th>
                                <th>Quantity</th>
                                <th>Model Number</th>
                                <th>Image</th>
                            </tr>
                        </thead>
                        <tbody id="modalEquipmentList">
                            <!-- Equipment rows will be dynamically added -->
                        </tbody>
                    </table>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Footer -->
    <footer class="bg-dark text-white text-center py-3 mt-4">
        <p>&copy; 2024 Superior Bros. All rights reserved.</p>
        <p>Designed by Superior Bros Team</p>
    </footer>

    <!-- JavaScript -->
   <script>
    $(document).ready(function () {
        let allOrders = []; // Store all orders for filtering

        // Fetch and display orders
        function fetchOrders() {
            $.ajax({
                url: 'http://localhost:3000/api/v1/orders',
                method: 'GET',
                success: function (response) {
                    if (response.orders && response.orders.length > 0) {
                        allOrders = response.orders; // Save all orders for filtering
                        displayOrders(allOrders); // Display all orders initially
                    } else {
                        $('.equipment-list tbody').html('<tr><td colspan="7">No orders found</td></tr>');
                    }
                },
                error: function (xhr, status, error) {
                    console.error('Error fetching orders:', error);
                    $('.equipment-list tbody').html('<tr><td colspan="7">Failed to fetch orders</td></tr>');
                },
            });
        }

        // Display orders in the table
        function displayOrders(orders) {
            let rows = '';

            orders.forEach(order => {
                rows += `
                    <tr>
                        <td>${order.order_id}</td>
                        <td>${new Date(order.date).toISOString().split('T')[0]}</td>
                        <td>${order.username}</td>
                        <td>
                            <button class="btn btn-primary view-details" data-order-id="${order.order_id}">View Details</button>
                        </td>
                    </tr>
                `;
            });

            $('.equipment-list tbody').html(rows);

            // Attach event listener to "View Details" buttons
            $('.view-details').on('click', function () {
                const orderId = $(this).data('order-id');
                fetchOrderDetails(orderId);
            });
        }

        // Fetch details of a specific order
        function fetchOrderDetails(orderId) {
            $.ajax({
                url: `http://localhost:3000/api/v1/orders/${orderId}`,
                method: 'GET',
                success: function (response) {
                    if (response.order) {
                        const order = response.order;

                        // Populate modal fields
                        $('#modalOrderId').text(order.order_id);
                        $('#modalOrderDate').text(new Date(order.date).toISOString().split('T')[0]);
                        $('#modalUsername').text(order.username);

                        // Populate equipment list in modal
                        let equipmentRows = '';
                        order.equipment.forEach(equipment => {
                            equipmentRows += `
                                <tr>
                                    <td>${equipment.equipment_name}</td>
                                    <td>${equipment.quantity}</td>
                                    <td>${equipment.model_number}</td>
                                    <td>
                                        <img src="${equipment.equipment_img ? `http://localhost:3000${equipment.equipment_img}` : 'default-image-path.jpg'}" alt="${equipment.equipment_name}" width="50">
                                    </td>
                                </tr>
                            `;
                        });

                        $('#modalEquipmentList').html(equipmentRows);

                        // Show the modal
                        $('#orderDetailsModal').modal('show');
                    } else {
                        alert('Order details not found.');
                    }
                },
                error: function (xhr, status, error) {
                    console.error('Error fetching order details:', error);
                    alert('Failed to fetch order details.');
                },
            });
        }

        // Search functionality
        $('#searchBtn').on('click', function () {
            const searchTerm = $('#search').val().trim().toLowerCase();

            if (searchTerm) {
                const filteredOrders = allOrders.filter(order =>
                    order.order_id.toString().toLowerCase().includes(searchTerm) ||
                    order.username.toLowerCase().includes(searchTerm) ||
                    (order.equipment && order.equipment.some(equipment => equipment.equipment_name.toLowerCase().includes(searchTerm)))
                );

                displayOrders(filteredOrders);
            } else {
                displayOrders(allOrders); // Reset to all orders if search term is empty
            }
        });

        // Filter by date range
        $('#filterDateBtn').on('click', function () {
            const startDate = $('#startDate').val();
            const endDate = $('#endDate').val();

            if (startDate && endDate) {
                const filteredOrders = allOrders.filter(order => {
                    const orderDate = new Date(order.date).toISOString().split('T')[0];
                    return orderDate >= startDate && orderDate <= endDate;
                });

                displayOrders(filteredOrders);
            } else {
                alert('Please select both start and end dates.');
            }
        });

        // Initial fetch of orders
        fetchOrders();
    });
</script>

 </body>
</html>
