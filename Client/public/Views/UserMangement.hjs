<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Management</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="styles.css">
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</head>
<body>

    <nav class="navbar navbar-expand-lg navbar-dark bg-dark" id="navbarId">
        <a class="navbar-brand" href="/HomeAdmin">Superior Bros</a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarContent"
        aria-controls="navbarContent" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
        </button>

        <div class="collapse navbar-collapse" id="navbarContent">
            <ul class="navbar-nav mr-auto">
                <li class="nav-item">
                    <a class="nav-link" href="/UserMangement">
                        <span class="mr-2">User Management Page</span>
                        <i class="fas fa-users"></i>
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/Orders">Orders</a>
                </li>
                <li class="nav-item d-flex align-items-center">
                    <input type="text" class="form-control col-9 ml-2" id="search" placeholder="Search for equipment">
                    <button class="btn btn-primary ml-2" id="searchBtn">Search</button>
                </li>
            </ul>
            <button class="btn btn-danger my-2 my-sm-0" id="logoutBtn">Logout</button>
        </div>
    </nav>
    
    <div class="container mt-5">
        <h1 class="text-center">User Management</h1>
        <table class="table table-striped mt-4" id="userTable">
            <thead class="thead-dark">
                <tr>
                    <th>ID</th>
                    <th>Name</th>
                    <th>Email</th>
                    <th>Role</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                <!-- User rows will be added here dynamically -->
            </tbody>
        </table>
    </div>

    <script>
        $(document).ready(function() {
            let UserData = [];
            $.ajax({
                url : "http://localhost:3000/api/v1/user/view",
                method: "GET" ,
                dataType:"json" ,
                success: function(data) {
                UserData = data;
                     $('.equipment-list tbody').empty();
                  data.forEach(function(item) {
                     $('.equipment-list tbody').append(`
                                <tr>
                                    <td>${item.equipment_img}</td>
                                    <td>${item.equipment_name}</td>
                                    <td>${item.equipment_id}</td>
                                    <td>${item.category_name}</td>
                                    <td>${item.supplier_name}</td>
                                    <td>${item.quantity}</td>
                                    <td>${item.status}</td>
                                    <td>${new Date(item.purchase_date).toLocaleDateString()}</td>
                                    <td><button class="btn btn-outline-primary">Edit</button>
                                    <button id = "details" class="btn btn-outline-info details" data-item='${JSON.stringify(item)}'>View Details</button>
                                    <button type="button" class="btn btn-outline-danger delete " data-id="${item.equipment_id}">Delete</button>
                                    </td>
                                </tr>
                            `);
                        });
                    },
                    error: function(xhr, status, error) {
                        console.error('Error fetching data:', error);
                    }


            })



            function renderUsers() {
                const userTableBody = $('#userTable tbody');
                userTableBody.empty();
                users.forEach(user => {
                    const row = `
                        <tr>
                            <td>${user.id}</td>
                            <td>${user.name}</td>
                            <td>${user.email}</td>
                            <td>${user.role}</td>
                            <td>
                                <button class="btn btn-primary update" data-id="${user.id}">Update</button>
                                <button class="btn btn-danger delete" data-id="${user.id}">Delete</button>
                            </td>
                        </tr>
                    `;
                    userTableBody.append(row);
                });
            }

            renderUsers();

            // Event delegation for dynamically added buttons
            $('#userTable').on('click', '.update', function() {
                const userId = $(this).data('id');
                const user = users.find(user => user.id === userId);
                if (user) {
                    const newName = prompt('Enter new name:', user.name);
                    const newEmail = prompt('Enter new email:', user.email);
                    const newRole = prompt('Enter new role:', user.role);
                    if (newName && newEmail && newRole) {
                        user.name = newName;
                        user.email = newEmail;
                        user.role = newRole;
                        renderUsers();
                    }
                }
            });

            $('#userTable').on('click', '.delete', function() {
                const userId = $(this).data('id');
                const userIndex = users.findIndex(user => user.id === userId);
                if (userIndex !== -1) {
                    users.splice(userIndex, 1);
                    renderUsers();
                }
            });
        });
    </script>
</body>
</html>