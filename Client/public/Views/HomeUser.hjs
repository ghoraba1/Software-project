<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Home - User</title>
  <!-- Bootstrap CSS -->
  <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
  <!-- jQuery -->
  <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
  <!-- Popper.js -->
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js"></script>
  <!-- Bootstrap JS -->
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
  <!-- Font Awesome -->
  <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
  <style>
    .filters-container {
      margin: 20px 0;
      display: flex;
      flex-wrap: wrap;
      justify-content: flex-start;
      align-items: center;
    }
    .filter-select {
      width: 200px;
      margin: 10px 10px 10px 0;
    }
    #searchInput {
      width: 250px;
      margin-left: 10px;
    }
    .cart-item {
      display: flex;
      align-items: center;
      justify-content: space-between;
      padding: 10px 0;
      border-bottom: 1px solid #ccc;
    }
    .cart-item .btn {
      margin: 0 5px;
    }
    .cart-item input.qtyInput {
      text-align: center;
      width: 50px;
    }
    .cart-item .removeFromCartBtn {
      margin-left: 15px;
    }
    .cart-item p {
      margin-bottom: 5px;
    }
    .cart-header {
      background-color: #f8f9fa;
      padding: 10px;
      margin-bottom: 10px;
      border: 1px solid #dee2e6;
    }
    .card-img-top {
      height: 200px;
      object-fit: cover;
    }
    .navbar-nav .nav-item .form-control {
      width: 250px;
    }
  </style>
</head>
<body class="bg-light">
  <!-- Navbar -->
  <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
    <a class="navbar-brand" href="#">Superior Bros</a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarContent"
      aria-controls="navbarContent" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>

    <div class="collapse navbar-collapse" id="navbarContent">
      <ul class="navbar-nav mr-auto align-items-center">
        <!-- Cart -->
        <li class="nav-item">
          <a class="nav-link" href="#" data-toggle="modal" data-target="#cartModal">
            <span class="mr-2">Cart</span>
            <i class="fas fa-shopping-cart"></i>
          </a>
        </li>
        <!-- Orders -->
        <li class="nav-item">
          <a class="nav-link" href="/orders">Orders</a>
        </li>
        <!-- Profile -->
        <li class="nav-item">
          <a class="nav-link" href="/Profile">
            <span class="mr-2">Your Profile</span>
            <i class="fas fa-user"></i>
          </a>
        </li>
        <!-- Search -->
        <li class="nav-item">
          <input type="text" id="searchInput" class="form-control" placeholder="Search for equipment">
        </li>
      </ul>
      <!-- Logout Button -->
      <button class="btn btn-danger my-2 my-sm-0" id="logoutBtn">Logout</button>
    </div>
  </nav>

  <!-- Main Content -->
  <div class="container mt-4">
    <h2 class="text-center mb-4">Available Equipment</h2>

    <!-- Filters -->
    <div class="filters-container">
      <div>
        <label for="category-filter" class="mr-2">Category:</label>
        <select class="form-control filter-select" id="category-filter">
          <option value="all">All</option>
        </select>
      </div>
      <div>
        <label for="supplier-filter" class="mr-2">Supplier:</label>
        <select class="form-control filter-select" id="supplier-filter">
          <option value="all">All</option>
        </select>
      </div>
    </div>

    <!-- Equipment List -->
    <div class="row" id="equipmentList">
      <!-- Equipment items will be dynamically inserted here -->
    </div>
  </div>

  <!-- Cart Modal -->
  <div class="modal fade" id="cartModal" tabindex="-1" aria-labelledby="cartModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="cartModalLabel">Your Cart</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body" id="cartItems">
          <!-- Cart items will be dynamically inserted here -->
        </div>
        <div class="modal-footer">
          <!-- "Make Order" button -->
          <button type="button" class="btn btn-primary" id="makeOrderBtn">Make Order</button>
          <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
        </div>
      </div>
    </div>
  </div>

  <!-- Footer -->
  <footer class="bg-dark text-white text-center py-3 mt-4">
    <p>&copy; 2024 The Superior Bros. All rights reserved.</p>
    <p>Designed by Superior Bros Team</p>
  </footer>

  <!-- JavaScript -->
  <script>
    $(document).ready(function () {
      // Handle logout button click with AJAX
      $('#logoutBtn').on('click', function () {
        $.ajax({
          type: 'POST',
          url: 'http://localhost:3000/api/v1/user/logout',
          xhrFields: {
            withCredentials: true // Include credentials for session authentication
          },
          success: function () {
            window.location.href = '/login';
          },
          error: function (error) {
            console.error('Error logging out:', error);
          }
        });
      });

      let categories = [];
      let suppliers = [];

      // Load equipment, categories, and suppliers
      function loadEquipment() {
        $.ajax({
          type: 'GET',
          url: 'http://localhost:3000/api/v1/equipment/view',
          xhrFields: {
            withCredentials: true // Include credentials for session authentication
          },
          success: function (data) {
            const equipmentList = $('#equipmentList');
            equipmentList.empty();
            categories = [];
            suppliers = [];

            data.forEach(equipment => {
              if (!categories.includes(equipment.category_name)) {
                categories.push(equipment.category_name);
              }
              if (!suppliers.includes(equipment.supplier_name)) {
                suppliers.push(equipment.supplier_name);
              }

              const equipmentItem = `
                <div class="col-md-4 mb-4">
                  <div class="card h-100 shadow-sm">
                    <img src="${equipment.equipment_img || 'https://via.placeholder.com/150'}" class="card-img-top" alt="Equipment Image">
                    <div class="card-body">
                      <h5 class="card-title">${equipment.equipment_name}</h5>
                      <p class="card-text">Category: ${equipment.category_name}</p>
                      <p class="card-text">Supplier: ${equipment.supplier_name}</p>
                      <p class="card-text">Status: ${equipment.status}</p>
                      <div class="d-flex flex-wrap justify-content-center rating-container" data-equipment-id="${equipment.equipment_id}">
                  ${[1, 2, 3, 4, 5].map(i => `<span class="star " data-value="${i}">&#9733;</span>`).join('')}
                </div> 
                    </div>
                    <div class="card-footer d-flex justify-content-between">
                      <span class="text-primary font-weight-bold available-quantity">
                        ${equipment.quantity} Available
                      </span>
                      <button class="btn btn-sm btn-success addToCartBtn" data-id="${equipment.equipment_id}">
                        Add to Cart
                      </button>
                    </div>
                  </div>
                </div>`;
              equipmentList.append(equipmentItem);
            });
//////////////////////////////////////////////////////////////////////////////////////
 $('.star').on('click', function () { 
        var rating = $(this).data('value'); 
        var equipmentId = $(this).closest('.rating-container').data('equipment-id'); 
        $(this).siblings().removeClass('checked'); 
        $(this).prevAll().addBack().addClass('checked'); 
            $.ajax({ 
              url: 'http://localhost:3000/api/v1/rating/new', 
              method: 'POST', 
              contentType: 'application/json', 
              data: JSON.stringify({
                equipment_id: equipmentId, 
                score: rating
              }), 
              success: function (response) { 
                alert('Thank you for rating!'); 
              }, 
              error: function (error) { 
                alert('Error submitting rating.'); 
              } 
            });
////////////////////////////////////////////////////////////////////////////////////////
            populateFilters();
            attachAddToCartEvent();
          },
          error: function (error) {
            console.error('Error fetching equipment data:', error);
          }
        });
      }

      // Populate dropdown filters for categories and suppliers
      function populateFilters() {
        const categoryFilter = $('#category-filter');
        const supplierFilter = $('#supplier-filter');

        categoryFilter.empty().append('<option value="all">All</option>');
        supplierFilter.empty().append('<option value="all">All</option>');

        categories.forEach(category => {
          categoryFilter.append(`<option value="${category}">${category}</option>`);
        });

        suppliers.forEach(supplier => {
          supplierFilter.append(`<option value="${supplier}">${supplier}</option>`);
        });
      }

      // Apply filters and search
      function applyFilters() {
        const categoryFilter = $('#category-filter').val();
        const supplierFilter = $('#supplier-filter').val();
        const searchKeyword = $('#searchInput').val().toLowerCase();

        $.ajax({
          url: 'http://localhost:3000/api/v1/equipment/view',
          method: 'GET',
          dataType: 'json',
          xhrFields: {
            withCredentials: true // Include credentials for session authentication
          },
          success: function (data) {
            const equipmentList = $('#equipmentList');
            equipmentList.empty();

            data.forEach(function (item) {
              if ((categoryFilter === 'all' || item.category_name === categoryFilter) &&
                (supplierFilter === 'all' || item.supplier_name === supplierFilter) &&
                (searchKeyword === '' || item.equipment_name.toLowerCase().includes(searchKeyword))) {
                const equipmentItem = `
                  <div class="col-md-4 mb-4">
                    <div class="card h-100 shadow-sm">
                      <img src="${item.equipment_img || 'https://via.placeholder.com/150'}" class="card-img-top" alt="Equipment Image">
                      <div class="card-body">
                        <h5 class="card-title">${item.equipment_name}</h5>
                        <p class="card-text">Category: ${item.category_name}</p>
                        <p class="card-text">Supplier: ${item.supplier_name}</p>
                        <p class="card-text">Status: ${item.status}</p>
                      </div>
                      <div class="card-footer d-flex justify-content-between">
                        <span class="text-primary font-weight-bold available-quantity">
                          ${item.quantity} Available
                        </span>
                        <button class="btn btn-sm btn-success addToCartBtn" data-id="${item.equipment_id}">
                          Add to Cart
                        </button>
                      </div>
                    </div>
                  </div>`;
                equipmentList.append(equipmentItem);
              }
            });

            attachAddToCartEvent();
          },
          error: function (error) {
            console.error('Error fetching equipment data with filters:', error);
          }
        });
      }

      // Attach event handler for "Add to Cart" button
      function attachAddToCartEvent() {
        $('.addToCartBtn').off('click').on('click', function () {
          const button = $(this);
          const equipmentId = button.data('id');
          const addQuantity = 1; // Quantity to add to cart

          $.ajax({
            type: 'POST',
            url: 'http://localhost:3000/api/v1/cart/new',
            contentType: 'application/json',
            data: JSON.stringify({ equipment_id: equipmentId, quantity: addQuantity }),
            xhrFields: {
              withCredentials: true // Include credentials for session authentication
            },
            success: function (response) {
              if (response.success) {
                alert('Item added to cart!');
                // Reload equipment data to reflect updated quantities
                loadEquipment();
                // Reload cart items if needed
                loadCartItems();
              } else {
                alert(response.message || 'Failed to add item to cart.');
              }
            },
            error: function (error) {
              console.error('Error adding to cart:', error);
              alert('Failed to add item to cart.');
            }
          });
        });
      }

      // Load cart items
      function loadCartItems() {
        console.log('Loading cart items...');
        $.ajax({
          type: 'GET',
          url: 'http://localhost:3000/api/v1/cart/view',
          xhrFields: {
            withCredentials: true // Include authentication credentials
          },
          success: function (data) {
            console.log('Cart data received:', data);
            const cartItemsContainer = $('#cartItems');
            cartItemsContainer.empty();

            if (!data.success) {
              alert(data.message || 'Failed to load cart items.');
              $('#makeOrderBtn').prop('disabled', true);
              return;
            }

            if (data.cart.length === 0) {
              cartItemsContainer.append('<p>Your cart is empty.</p>');
              $('#makeOrderBtn').prop('disabled', true);
            } else {
              $('#makeOrderBtn').prop('disabled', false);
              data.cart.forEach(item => {
                const decreaseDisabled = item.quantity <= 1 ? 'disabled' : '';
                const cartItem = `
                  <div class="cart-item d-flex align-items-center">
                    <div class="mr-auto">
                      <p>${item.equipment_name}</p>
                      <div class="d-flex align-items-center">
                        <button class="btn btn-sm btn-secondary decreaseQtyBtn" data-id="${item.cart_id}" ${decreaseDisabled}>-</button>
                        <input type="text" class="form-control qtyInput mx-2" data-id="${item.cart_id}" value="${item.quantity}" style="width: 50px; text-align: center;" readonly>
                        <button class="btn btn-sm btn-secondary increaseQtyBtn" data-id="${item.cart_id}">+</button>
                      </div>
                    </div>
                    <button class="btn btn-sm btn-danger removeFromCartBtn ml-3" data-id="${item.cart_id}">Remove</button>
                  </div>`;
                cartItemsContainer.append(cartItem);
              });
              attachCartItemEventHandlers();
            }
          },
          error: function (xhr, status, error) {
            console.error('Error loading cart items:', error);
            console.log('Response:', xhr.responseText);
            alert('Failed to load cart items.');
          }
        });
      }

      // Attach event handlers for cart item buttons
      function attachCartItemEventHandlers() {
        // Increase quantity
        $('.increaseQtyBtn').off('click').on('click', function () {
          const cartId = $(this).data('id');
          updateCartQuantity(cartId, 1); // Increase by 1
        });

        // Decrease quantity
        $('.decreaseQtyBtn').off('click').on('click', function () {
          const cartId = $(this).data('id');
          updateCartQuantity(cartId, -1); // Decrease by 1
        });

        // Remove item from cart
        $('.removeFromCartBtn').off('click').on('click', function () {
          const cartId = $(this).data('id');
          removeFromCart(cartId);
        });
      }

      // Update cart quantity
      function updateCartQuantity(cartId, adjustment) {
        $.ajax({
          type: 'PUT',
          url: `http://localhost:3000/api/v1/cart/update/${cartId}`,
          contentType: 'application/json',
          data: JSON.stringify({ adjustment: adjustment }),
          xhrFields: {
            withCredentials: true // Include authentication credentials
          },
          success: function (response) {
            if (response.newQuantity === 0) {
              // Remove item if quantity is zero
              removeFromCart(cartId);
            } else {
              // Reload cart items to reflect the updated quantity
              loadCartItems();
              // Reload equipment list to update available quantities
              loadEquipment();
            }
          },
          error: function (xhr, status, error) {
            console.error('Error updating cart quantity:', error);
            let errorMessage = 'Failed to update cart quantity.';
            if (xhr.responseJSON && xhr.responseJSON.message) {
              errorMessage = xhr.responseJSON.message;
            }
            alert(errorMessage);
          }
        });
      }

      // Remove item from cart
      function removeFromCart(cartId) {
        $.ajax({
          type: 'DELETE',
          url: `http://localhost:3000/api/v1/cart/delete/${cartId}`,
          xhrFields: {
            withCredentials: true
          },
          success: function (response) {
            alert('Item removed from cart.');
            loadCartItems(); // Reload cart items
            loadEquipment(); // Reload equipment list
          },
          error: function (xhr, status, error) {
            console.error('Error removing item from cart:', error);
            let errorMessage = 'Failed to remove item from cart.';
            if (xhr.responseJSON && xhr.responseJSON.message) {
              errorMessage = xhr.responseJSON.message;
            }
            alert(errorMessage);
          }
        });
      }

      // Call loadCartItems when the cart modal is shown
      $('#cartModal').on('show.bs.modal', function () {
        loadCartItems();
      });

      // Handle "Make Order" button click
      $('#makeOrderBtn').on('click', function () {
        $.ajax({
          type: 'POST',
          url: 'http://localhost:3000/api/v1/order/new',
          xhrFields: {
            withCredentials: true // Include authentication credentials
          },
          success: function (response) {
            if (response.success) {
              alert('Order placed successfully!');
              loadEquipment(); // Reload equipment data
              loadCartItems(); // Reload cart items
            } else {
              alert(response.message || 'Failed to place order.');
            }
          },
          error: function (xhr, status, error) {
            console.error('Error placing order:', error);
            console.log('Response:', xhr.responseText);
            let errorMessage = 'Failed to place order.';
            if (xhr.responseJSON && xhr.responseJSON.message) {
              errorMessage = xhr.responseJSON.message;
            }
            alert(errorMessage);
          }
        });
      });

      // Event handlers for filters and search input
      $('#category-filter, #supplier-filter').on('change', function () {
        applyFilters();
      });

      $('#searchInput').on('keyup', function () {
        applyFilters();
      });

      // Initial load
      loadEquipment();
    });
  </script>
</body>
</html>
